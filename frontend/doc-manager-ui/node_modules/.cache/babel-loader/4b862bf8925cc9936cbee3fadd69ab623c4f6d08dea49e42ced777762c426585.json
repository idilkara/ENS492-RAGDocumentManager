{"ast":null,"code":"var _jsxFileName = \"/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './chatbot.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: 'Hello! How can I assist you today?',\n    isBot: true\n  }]);\n  const [input, setInput] = useState('');\n  const [isDimVisible, setIsDimVisible] = useState(false); // State for dim overlay visibility\n  const [isPdfVisible, setIsPdfVisible] = useState(false); // State for PDF visibility\n\n  const handleSendMessage = async () => {\n    if (input.trim() === '') return;\n\n    // const newMessage = { id: Date.now(), text: input, isBot: false };\n    // setMessages([...messages, newMessage]);\n\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      isBot: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n\n    // // Simulate bot response\n    // setTimeout(() => {\n    //   setMessages((prev) => [\n    //     ...prev,\n    //     { id: Date.now() + 1, text: 'I’m here to help you manage documents.', isBot: true },\n    //   ]);\n    // }, 1000);\n    // Send the user's message to the backend using fetch\n    try {\n      const response = await fetch('http://127.0.0.1:5000/user_query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: input\n        }) // Send the input as the user query\n      });\n      const data = await response.json();\n\n      // Assuming the backend responds with a text field\n      const botMessage = data.response || \"I'm here to assist you!\";\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: botMessage,\n        isBot: true\n      }]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: \"Sorry, there was an issue processing your request.\",\n        isBot: true\n      }]);\n    }\n    setInput('');\n  };\n  const handleViewPDFClick = () => {\n    setIsDimVisible(true); // Show dim overlay when the button is clicked\n    setIsPdfVisible(true); // Show PDF viewer\n  };\n  const handleBackArrowClick = () => {\n    setIsDimVisible(false); // Hide dim overlay when back arrow is clicked\n    setIsPdfVisible(false); // Hide PDF viewer\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [isDimVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dim\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-arrow-button\",\n        onClick: handleBackArrowClick,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), isPdfVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-container\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"/pdfs/aaa.pdf\" // Assuming the PDF is in the public folder\n        ,\n\n        title: \"PDF Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"Document Management Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isBot ? 'bot' : 'user'}`,\n          children: [msg.text, msg.isBot && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"display-button\",\n            onClick: handleViewPDFClick,\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"text-input\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"OeD8qMgwnK+YletH9uADMAo3UOE=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatbotUI","_s","messages","setMessages","id","text","isBot","input","setInput","isDimVisible","setIsDimVisible","isPdfVisible","setIsPdfVisible","handleSendMessage","trim","userMessage","Date","now","prev","response","fetch","method","headers","body","JSON","stringify","query","data","json","botMessage","error","console","handleViewPDFClick","handleBackArrowClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","title","map","msg","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './chatbot.css';\nimport axios from 'axios';\n\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([\n    { id: 1, text: 'Hello! How can I assist you today?', isBot: true },\n  ]);\n  const [input, setInput] = useState('');\n  const [isDimVisible, setIsDimVisible] = useState(false);  // State for dim overlay visibility\n  const [isPdfVisible, setIsPdfVisible] = useState(false);  // State for PDF visibility\n\n  const handleSendMessage = async () => {\n    if (input.trim() === '') return;\n\n    // const newMessage = { id: Date.now(), text: input, isBot: false };\n    // setMessages([...messages, newMessage]);\n\n    const userMessage = { id: Date.now(), text: input, isBot: false };\n    setMessages((prev) => [...prev, userMessage]);\n\n    // // Simulate bot response\n    // setTimeout(() => {\n    //   setMessages((prev) => [\n    //     ...prev,\n    //     { id: Date.now() + 1, text: 'I’m here to help you manage documents.', isBot: true },\n    //   ]);\n    // }, 1000);\n    // Send the user's message to the backend using fetch\n    try {\n      const response = await fetch('http://127.0.0.1:5000/user_query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query: input }), // Send the input as the user query\n      });\n\n      const data = await response.json();\n\n      // Assuming the backend responds with a text field\n      const botMessage = data.response || \"I'm here to assist you!\";\n      setMessages((prev) => [\n        ...prev,\n        { id: Date.now() + 1, text: botMessage, isBot: true },\n      ]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages((prev) => [\n        ...prev,\n        { id: Date.now() + 1, text: \"Sorry, there was an issue processing your request.\", isBot: true },\n      ]);\n    }\n\n    setInput('');\n  };\n\n  const handleViewPDFClick = () => {\n    setIsDimVisible(true);  // Show dim overlay when the button is clicked\n    setIsPdfVisible(true);  // Show PDF viewer\n  };\n\n  const handleBackArrowClick = () => {\n    setIsDimVisible(false);  // Hide dim overlay when back arrow is clicked\n    setIsPdfVisible(false);  // Hide PDF viewer\n  };\n\n  return (\n    <div className=\"app-container\">\n      {isDimVisible && (\n        <div className=\"dim\">\n          {/* Back arrow button to restore lights */}\n          <button className=\"back-arrow-button\" onClick={handleBackArrowClick}>\n            ←\n          </button>\n        </div>\n      )}\n\n      {/* PDF Viewer */}\n      {isPdfVisible && (\n        <div className=\"pdf-container\">\n          {/* Using iframe to display the PDF */}\n          <iframe\n            src=\"/pdfs/aaa.pdf\"  // Assuming the PDF is in the public folder\n\n            title=\"PDF Viewer\"\n          ></iframe>\n        </div>\n      )}\n\n      <div className=\"chat-container\">\n        <div className=\"chat-header\">Document Management Chatbot</div>\n\n        <div className=\"chat-history\">\n          {messages.map((msg) => (\n            <div key={msg.id} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\n              {msg.text}\n\n              {/* Show the button below the chatbot message only */}\n              {msg.isBot && (\n                <button className=\"display-button\" onClick={handleViewPDFClick}>\n                  View PDF\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            className=\"text-input\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button className=\"send-button\" onClick={handleSendMessage}>\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}