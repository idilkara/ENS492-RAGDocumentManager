{"ast":null,"code":"var _jsxFileName = \"/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport './chatbot.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = ({\n  chatID,\n  chats\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState(chats[chatID]);\n  const chatHistoryRef = useRef(null);\n\n  // Fetch the selected chat session messages from the backend\n  useEffect(() => {\n    const fetchChatSession = async () => {\n      if (chatID !== \"NONE\") {\n        try {\n          const response = await fetch(`http://localhost:5000/get_chat_session?user_id=1&session_id=${chatID}`);\n          const data = await response.json();\n          if (response.ok) {\n            setMessages(data.messages);\n          } else {\n            console.error('Error fetching chat session:', data.error);\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      } else {\n        setMessages([{\n          id: 1,\n          text: \"Hello! How can I assist you today?\",\n          isBot: true\n        }]);\n      }\n    };\n    fetchChatSession();\n  }, [chatID]);\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      isBot: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/user_query\", {\n        query: input\n      });\n      const data = response.data;\n      const botResponse = typeof data.response === 'string' ? data.response : JSON.stringify(data.response);\n      const filePath = data.file_path || null;\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: botResponse,\n        isBot: true,\n        filePath: filePath\n      }]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: \"Sorry, there was an issue processing your request.\",\n        isBot: true\n      }]);\n    }\n    setInput(\"\");\n  };\n  const handleViewPDFClick = async filePath => {\n    if (!filePath) return;\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/get_pdf?file_path=${encodeURIComponent(filePath)}`, {\n        responseType: 'blob'\n      });\n      const blob = new Blob([response.data], {\n        type: 'application/pdf'\n      });\n      const url = window.URL.createObjectURL(blob);\n      window.open(url, \"_blank\");\n    } catch (error) {\n      console.error(\"Error fetching PDF:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interaction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      ref: chatHistoryRef,\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.isBot ? 'bot-message' : 'user-message',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), message.filePath && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleViewPDFClick(message.filePath),\n          className: \"file-link\",\n          children: \"View PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"Y4gXus2Hpz2+TE35qoFPpomP2FU=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","axios","jsxDEV","_jsxDEV","ChatbotUI","chatID","chats","_s","input","setInput","messages","setMessages","chatHistoryRef","fetchChatSession","response","fetch","data","json","ok","console","error","id","text","isBot","handleSendMessage","trim","userMessage","Date","now","prev","post","query","botResponse","JSON","stringify","filePath","file_path","handleViewPDFClick","get","encodeURIComponent","responseType","blob","Blob","type","url","window","URL","createObjectURL","open","className","children","ref","map","message","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport './chatbot.css';\nimport axios from 'axios';\n\nconst ChatbotUI = ({ chatID, chats }) => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState(chats[chatID]);\n  const chatHistoryRef = useRef(null);\n\n  // Fetch the selected chat session messages from the backend\n  useEffect(() => {\n    const fetchChatSession = async () => {\n      if (chatID !== \"NONE\") {\n        try {\n          const response = await fetch(`http://localhost:5000/get_chat_session?user_id=1&session_id=${chatID}`);\n          const data = await response.json();\n          if (response.ok) {\n            setMessages(data.messages);\n          } else {\n            console.error('Error fetching chat session:', data.error);\n          }\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      } else {\n        setMessages([{ id: 1, text: \"Hello! How can I assist you today?\", isBot: true }]);\n      }\n    };\n\n    fetchChatSession();\n  }, [chatID]);\n\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n\n    const userMessage = { id: Date.now(), text: input, isBot: false };\n    setMessages((prev) => [...prev, userMessage]);\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/user_query\", {\n        query: input\n      });\n\n      const data = response.data;\n      const botResponse = typeof data.response === 'string' ? data.response : JSON.stringify(data.response);\n      const filePath = data.file_path || null;\n\n      setMessages((prev) => [\n        ...prev,\n        {\n          id: Date.now() + 1,\n          text: botResponse,\n          isBot: true,\n          filePath: filePath,\n        },\n      ]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages((prev) => [\n        ...prev,\n        { id: Date.now() + 1, text: \"Sorry, there was an issue processing your request.\", isBot: true },\n      ]);\n    }\n\n    setInput(\"\");\n  };\n\n  const handleViewPDFClick = async (filePath) => {\n    if (!filePath) return;\n\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/get_pdf?file_path=${encodeURIComponent(filePath)}`, {\n        responseType: 'blob',\n      });\n\n      const blob = new Blob([response.data], { type: 'application/pdf' });\n      const url = window.URL.createObjectURL(blob);\n\n      window.open(url, \"_blank\");\n    } catch (error) {\n      console.error(\"Error fetching PDF:\", error);\n    }\n  };\n\n  return (\n    <div className=\"chat-interaction-container\">\n      <div className=\"messages-container\" ref={chatHistoryRef}>\n        {messages.map((message) => (\n          <div key={message.id} className={message.isBot ? 'bot-message' : 'user-message'}>\n            <div>{message.text}</div>\n            {message.filePath && (\n              <div onClick={() => handleViewPDFClick(message.filePath)} className=\"file-link\">\n                View PDF\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}