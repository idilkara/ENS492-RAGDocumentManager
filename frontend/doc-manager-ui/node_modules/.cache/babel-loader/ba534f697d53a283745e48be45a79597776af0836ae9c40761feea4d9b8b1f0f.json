{"ast":null,"code":"var _jsxFileName = \"/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport './chatbot.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = ({\n  chatID,\n  chats\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState(chats[chatID] || []);\n  const chatHistoryRef = useRef(null);\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      isBot: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/user_query\", {\n        query: input,\n        user_id: '1',\n        session_id: chatID\n      });\n      const data = response.data;\n      const botResponse = typeof data.response === 'string' ? data.response : JSON.stringify(data.response);\n      const highlightedPdfPath = data.highlighted_pdf_path || null;\n      console.log(\"Highlighted PDF Path:\", highlightedPdfPath);\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: botResponse,\n        isBot: true,\n        pdfPath: highlightedPdfPath // Store the temporary file path\n      }]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: \"Sorry, there was an issue processing your request.\",\n        isBot: true\n      }]);\n    }\n    setInput(\"\");\n  };\n  const handleViewPDFClick = async pdfPath => {\n    if (!pdfPath) return;\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/get_highlighted_pdf?file_path=${encodeURIComponent(pdfPath)}`, {\n        responseType: 'blob'\n      });\n      const blob = new Blob([response.data], {\n        type: 'application/pdf'\n      });\n      const url = window.URL.createObjectURL(blob);\n\n      // Open the PDF in a new tab\n      window.open(url, \"_blank\");\n\n      // Clean up the URL object after opening\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n      }, 100);\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        alert(\"The highlighted PDF has expired. Please make the query again to generate a new highlight.\");\n      } else {\n        console.error(\"Error fetching PDF:\", error);\n        alert(\"Error loading the PDF. Please try again.\");\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Scroll to the most recent message\n  useEffect(() => {\n    if (chatHistoryRef.current) {\n      chatHistoryRef.current.scrollTop = chatHistoryRef.current.scrollHeight;\n    }\n  }, [messages]);\n  useEffect(() => {\n    setMessages(chats[chatID] || []);\n  }, [chatID, chats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interaction-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        ref: chatHistoryRef,\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isBot ? 'bot' : 'user'}`,\n          children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), msg.isBot && msg.pdfPath && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"display-button\",\n            onClick: () => handleViewPDFClick(msg.pdfPath),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pdfLabel\",\n              children: \"View Highlighted PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-input\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-link\",\n        children: \"Give us feedback!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"fWn3plV7rcoUU0IEJAe7tIdh5PA=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactMarkdown","axios","jsxDEV","_jsxDEV","ChatbotUI","chatID","chats","_s","input","setInput","messages","setMessages","chatHistoryRef","handleSendMessage","trim","userMessage","id","Date","now","text","isBot","prev","response","post","query","user_id","session_id","data","botResponse","JSON","stringify","highlightedPdfPath","highlighted_pdf_path","console","log","pdfPath","error","handleViewPDFClick","get","encodeURIComponent","responseType","blob","Blob","type","url","window","URL","createObjectURL","open","setTimeout","revokeObjectURL","status","alert","handleKeyPress","e","key","shiftKey","preventDefault","current","scrollTop","scrollHeight","className","children","ref","map","msg","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport './chatbot.css';\nimport axios from 'axios';\n\nconst ChatbotUI = ({ chatID, chats }) => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState(chats[chatID] || []);\n  const chatHistoryRef = useRef(null);\n\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    \n    const userMessage = { id: Date.now(), text: input, isBot: false };\n    setMessages((prev) => [...prev, userMessage]);\n    \n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/user_query\", {\n        query: input,\n        user_id: '1',\n        session_id: chatID\n      });\n      \n      const data = response.data;\n      const botResponse = typeof data.response === 'string' ? data.response : JSON.stringify(data.response);\n      const highlightedPdfPath = data.highlighted_pdf_path || null;\n      \n      console.log(\"Highlighted PDF Path:\", highlightedPdfPath);\n      \n      setMessages((prev) => [\n        ...prev,\n        {\n          id: Date.now() + 1,\n          text: botResponse,\n          isBot: true,\n          pdfPath: highlightedPdfPath, // Store the temporary file path\n        },\n      ]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages((prev) => [\n        ...prev,\n        { \n          id: Date.now() + 1, \n          text: \"Sorry, there was an issue processing your request.\", \n          isBot: true \n        },\n      ]);\n    }\n    setInput(\"\");\n  };\n\n  const handleViewPDFClick = async (pdfPath) => {\n    if (!pdfPath) return;\n    \n    try {\n      const response = await axios.get(\n        `http://127.0.0.1:5000/get_highlighted_pdf?file_path=${encodeURIComponent(pdfPath)}`,\n        {\n          responseType: 'blob',\n        }\n      );\n      \n      const blob = new Blob([response.data], { type: 'application/pdf' });\n      const url = window.URL.createObjectURL(blob);\n      \n      // Open the PDF in a new tab\n      window.open(url, \"_blank\");\n      \n      // Clean up the URL object after opening\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n      }, 100);\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        alert(\"The highlighted PDF has expired. Please make the query again to generate a new highlight.\");\n      } else {\n        console.error(\"Error fetching PDF:\", error);\n        alert(\"Error loading the PDF. Please try again.\");\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Scroll to the most recent message\n  useEffect(() => {\n    if (chatHistoryRef.current) {\n      chatHistoryRef.current.scrollTop = chatHistoryRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    setMessages(chats[chatID] || []);\n  }, [chatID, chats]);\n\n  return (\n    <div className=\"chat-interaction-container\">\n      <div className=\"chat-container\">\n        <div className=\"chat-history\" ref={chatHistoryRef}>\n          {messages.map((msg) => (\n            <div key={msg.id} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\n              <ReactMarkdown>{msg.text}</ReactMarkdown>\n              {msg.isBot && msg.pdfPath && (\n                <button \n                  className=\"display-button\" \n                  onClick={() => handleViewPDFClick(msg.pdfPath)}\n                >\n                  <div className=\"pdfLabel\">View Highlighted PDF</div>\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n        <div className=\"input-container\">\n          <textarea\n            className=\"text-input\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n          />\n          <button className=\"send-button\" onClick={handleSendMessage}>\n            Send\n          </button>\n        </div>\n        <div className=\"feedback-link\">Give us feedback!</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}