{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import ReactMarkdown from\"react-markdown\";import'./chatbot.css';import axios from'axios';import config from\"../config\";import apiFetch from\"../api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatbotUI=_ref=>{let{chatID,chats,createNewChatSession,setChats,setChatID}=_ref;const[input,setInput]=useState('');const[messages,setMessages]=useState(chats[chatID]||[]);const chatHistoryRef=useRef(null);const[isSending,setIsSending]=useState(false);const[selectedModel,setSelectedModel]=useState(\"llama3.2:3b\");// Default model\nconst models=[\"llama3.2:3b\",\"llama3.3:7b\",\"deepseek-r1:1.5b\",\"mistral:7b\"];// get it from frontend\nconst[selectedLanguage,setSelectedLanguage]=useState(\"eng\");// Default language\nconst languages=[\"eng\",\"tur\"];// English and Turkish\nconst chatIdRef=useRef(chatID);useEffect(()=>{chatIdRef.current=chatID;},[chatID]);const handleSendMessage=async()=>{if(input.trim()===\"\"||isSending)return;setIsSending(true);let currentChatId=chatID;const userMessage={id:Date.now(),text:input,isBot:false};// If chatID is null, create a new chat session\nif(!currentChatId){try{currentChatId=await createNewChatSession();if(!currentChatId){setMessages(prev=>[...prev,{id:Date.now()+1,text:\"Error creating new chat session. Please try again.\",isBot:true}]);setIsSending(false);return;}// Ensure we don't overwrite messages with a new array if it already exists\nsetChats(prev=>({...prev,[currentChatId]:prev[currentChatId]||[]// Only set if it doesn't exist\n}));setChatID(currentChatId);// Update chat ID state immediately\n}catch(error){console.error(\"Error creating new chat session:\",error);setIsSending(false);return;}}// Add the user message **only once** (outside session creation logic)\nsetMessages(prev=>[...prev,userMessage]);setChats(prev=>({...prev,[currentChatId]:[...(prev[currentChatId]||[]),userMessage]// Ensure it appends correctly\n}));setInput(\"\");try{const data=await apiFetch(`${config.API_BASE_URL}/user_query`,{method:'POST',body:JSON.stringify({query:input,user_id:localStorage.getItem(\"userId\"),session_id:currentChatId,model:selectedModel,language:selectedLanguage})});const botResponse=typeof data.response==='string'?data.response:JSON.stringify(data.response);const highlightedPdfsource=data.source_docs_arr||null;console.log(data);console.log(highlightedPdfsource);const botMessageId=Date.now()+1;const botMessage={id:botMessageId,text:\"\",isBot:true,sources:highlightedPdfsource};// Append bot message\nsetMessages(prev=>[...prev,botMessage]);setChats(prev=>({...prev,[currentChatId]:[...prev[currentChatId],botMessage]}));// Simulate streaming effect\nconst words=botResponse.split(\" \");for(let i=0;i<words.length;i++){await new Promise(resolve=>setTimeout(resolve,50));setMessages(prevMessages=>prevMessages.map(msg=>msg.id===botMessageId?{...msg,text:(msg.text||\"\")+words[i]+\" \"}:msg));setChats(prev=>({...prev,[currentChatId]:prev[currentChatId].map(msg=>msg.id===botMessageId?{...msg,text:(msg.text||\"\")+words[i]+\" \"}:msg)}));}}catch(error){console.error(\"Error sending request:\",error);const errorMessage={id:Date.now()+1,text:\"Sorry, there was an issue processing your request.\",isBot:true};setMessages(prev=>[...prev,errorMessage]);setChats(prev=>({...prev,[currentChatId]:[...prev[currentChatId],errorMessage]}));}setIsSending(false);};const handleViewPDFClick=async function(pdfPath){let pageNumber=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!pdfPath)return;const token=localStorage.getItem('authToken');try{const response=await axios.get(`${config.API_BASE_URL}/get_highlighted_pdf?file_path=${encodeURIComponent(pdfPath)}`,{responseType:'blob',headers:{'Authorization':`Bearer ${token}`}});const blob=new Blob([response.data],{type:'application/pdf'});const url=window.URL.createObjectURL(blob);// Open the PDF in a new tab with the specific page number\nwindow.open(`${url}#page=${pageNumber}`,\"_blank\");// Clean up the URL object after opening\nsetTimeout(()=>{window.URL.revokeObjectURL(url);},100);}catch(error){if(error.response&&error.response.status===404){alert(\"The highlighted PDF has expired. Please make the query again to generate a new highlight.\");}else{console.error(\"Error fetching PDF:\",error);alert(\"Error loading the PDF. Please try again.\");}}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};// Scroll to the most recent message\nuseEffect(()=>{if(chatHistoryRef.current){chatHistoryRef.current.scrollTop=chatHistoryRef.current.scrollHeight;}},[messages]);useEffect(()=>{setMessages(chats[chatID]||[]);},[chatID,chats]);const getWelcomeMessage=()=>{return selectedLanguage===\"eng\"?\"Hello! Let me know what you're curious about, and I'll find the relevant documents for you. How can I help you?\":\"Merhaba! Merak ettiğiniz konuları bana söyleyin, sizin için ilgili dokümanları bulayım. Size nasıl yardımcı olabilirim?\";};return/*#__PURE__*/_jsx(\"div\",{className:\"chat-interaction-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:/*#__PURE__*/_jsx(\"div\",{className:\"select-container\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-history\",ref:chatHistoryRef,children:messages.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"message bot\",children:/*#__PURE__*/_jsx(ReactMarkdown,{children:getWelcomeMessage()})}):messages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${msg.isBot?'bot':'user'}`,children:[/*#__PURE__*/_jsx(ReactMarkdown,{children:msg.text}),msg.isBot&&msg.sources&&msg.sources.length>0&&msg.sources.filter(source=>(source===null||source===void 0?void 0:source.filename)&&source.filename!==\"No filename\")// Ensure filename is valid\n.map((source,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"display-button\",onClick:()=>handleViewPDFClick(source.highlighted_pdf_path,source.pages[0]),children:/*#__PURE__*/_jsx(\"div\",{className:\"pdfLabel\",children:source.filename})},index))]},msg.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"text-input\",value:input,onChange:e=>setInput(e.target.value),onKeyPress:handleKeyPress,placeholder:selectedLanguage===\"eng\"?\"Type your message...\":\"Mesajınızı yazın...\",disabled:isSending}),/*#__PURE__*/_jsx(\"button\",{className:\"send-button\",onClick:handleSendMessage,disabled:isSending,children:isSending?selectedLanguage===\"eng\"?\"Waiting...\":\"Bekleyin...\":selectedLanguage===\"eng\"?\"Send\":\"Gönder\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"feedback-link\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://docs.google.com/forms/d/e/1FAIpQLSedQob3XPLOoiyA3sLy7jsVG0L3twcE_upSVL7ezV7NSuSVYQ/viewform?usp=header\",target:\"_blank\",rel:\"noopener noreferrer\",children:selectedLanguage===\"eng\"?\"Give us feedback!\":\"Geribildirim verin!\"})})]})});};export default ChatbotUI;","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactMarkdown","axios","config","apiFetch","jsx","_jsx","jsxs","_jsxs","ChatbotUI","_ref","chatID","chats","createNewChatSession","setChats","setChatID","input","setInput","messages","setMessages","chatHistoryRef","isSending","setIsSending","selectedModel","setSelectedModel","models","selectedLanguage","setSelectedLanguage","languages","chatIdRef","current","handleSendMessage","trim","currentChatId","userMessage","id","Date","now","text","isBot","prev","error","console","data","API_BASE_URL","method","body","JSON","stringify","query","user_id","localStorage","getItem","session_id","model","language","botResponse","response","highlightedPdfsource","source_docs_arr","log","botMessageId","botMessage","sources","words","split","i","length","Promise","resolve","setTimeout","prevMessages","map","msg","errorMessage","handleViewPDFClick","pdfPath","pageNumber","arguments","undefined","token","get","encodeURIComponent","responseType","headers","blob","Blob","type","url","window","URL","createObjectURL","open","revokeObjectURL","status","alert","handleKeyPress","e","key","shiftKey","preventDefault","scrollTop","scrollHeight","getWelcomeMessage","className","children","ref","filter","source","filename","index","onClick","highlighted_pdf_path","pages","value","onChange","target","onKeyPress","placeholder","disabled","href","rel"],"sources":["C:/Users/LENOVO/OneDrive/Masaüstü/Bitirme/bitirme/frontend/doc-manager-ui/src/pages/chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport './chatbot.css';\r\nimport axios from 'axios';\r\nimport config from \"../config\";\r\nimport apiFetch from \"../api\";\r\n\r\nconst ChatbotUI = ({ chatID, chats, createNewChatSession, setChats, setChatID }) => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState(chats[chatID] || []);\r\n  const chatHistoryRef = useRef(null);\r\n  const [isSending, setIsSending] = useState(false);\r\n\r\n  const [selectedModel, setSelectedModel] = useState(\"llama3.2:3b\"); // Default model\r\n  const models = [\"llama3.2:3b\", \"llama3.3:7b\", \"deepseek-r1:1.5b\", \"mistral:7b\"]; // get it from frontend\r\n\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"eng\"); // Default language\r\n  const languages = [\"eng\", \"tur\"]; // English and Turkish\r\n\r\n  const chatIdRef = useRef(chatID);\r\n\r\nuseEffect(() => {\r\n  chatIdRef.current = chatID;\r\n}, [chatID]);\r\n\r\n\r\nconst handleSendMessage = async () => {\r\n  if (input.trim() === \"\" || isSending) return;\r\n\r\n  setIsSending(true);\r\n\r\n  let currentChatId = chatID;\r\n  const userMessage = { id: Date.now(), text: input, isBot: false };\r\n\r\n  // If chatID is null, create a new chat session\r\n  if (!currentChatId) {\r\n    try {\r\n      currentChatId = await createNewChatSession();\r\n      if (!currentChatId) {\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { id: Date.now() + 1, text: \"Error creating new chat session. Please try again.\", isBot: true },\r\n        ]);\r\n        setIsSending(false);\r\n        return;\r\n      }\r\n      \r\n      // Ensure we don't overwrite messages with a new array if it already exists\r\n      setChats(prev => ({\r\n        ...prev,\r\n        [currentChatId]: prev[currentChatId] || []  // Only set if it doesn't exist\r\n      }));\r\n\r\n      setChatID(currentChatId); // Update chat ID state immediately\r\n    } catch (error) {\r\n      console.error(\"Error creating new chat session:\", error);\r\n      setIsSending(false);\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Add the user message **only once** (outside session creation logic)\r\n  setMessages((prev) => [...prev, userMessage]);\r\n  setChats(prev => ({\r\n    ...prev,\r\n    [currentChatId]: [...(prev[currentChatId] || []), userMessage]  // Ensure it appends correctly\r\n  }));\r\n\r\n  setInput(\"\");\r\n\r\n  try {\r\n    const data = await apiFetch(`${config.API_BASE_URL}/user_query`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        query: input,\r\n        user_id: localStorage.getItem(\"userId\"),\r\n        session_id: currentChatId,\r\n        model: selectedModel,\r\n        language: selectedLanguage\r\n      })\r\n    });\r\n\r\n    const botResponse = typeof data.response === 'string' ? data.response : JSON.stringify(data.response);\r\n    const highlightedPdfsource= data.source_docs_arr|| null;\r\n    console.log(data);\r\n    console.log(highlightedPdfsource);\r\n\r\n    const botMessageId = Date.now() + 1;\r\n    const botMessage = { id: botMessageId, text: \"\", isBot: true, sources:  highlightedPdfsource };\r\n\r\n    // Append bot message\r\n    setMessages((prev) => [...prev, botMessage]);\r\n    setChats(prev => ({\r\n      ...prev,\r\n      [currentChatId]: [...prev[currentChatId], botMessage]\r\n    }));\r\n\r\n    // Simulate streaming effect\r\n    const words = botResponse.split(\" \");\r\n    for (let i = 0; i < words.length; i++) {\r\n      await new Promise((resolve) => setTimeout(resolve, 50));\r\n\r\n      setMessages((prevMessages) =>\r\n        prevMessages.map((msg) =>\r\n          msg.id === botMessageId ? { ...msg, text: (msg.text || \"\") + words[i] + \" \" } : msg\r\n        )\r\n      );\r\n\r\n      setChats(prev => ({\r\n        ...prev,\r\n        [currentChatId]: prev[currentChatId].map((msg) =>\r\n          msg.id === botMessageId ? { ...msg, text: (msg.text || \"\") + words[i] + \" \" } : msg\r\n        )\r\n      }));\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error(\"Error sending request:\", error);\r\n    const errorMessage = { \r\n      id: Date.now() + 1, \r\n      text: \"Sorry, there was an issue processing your request.\", \r\n      isBot: true \r\n    };\r\n    setMessages((prev) => [...prev, errorMessage]);\r\n    setChats(prev => ({\r\n      ...prev,\r\n      [currentChatId]: [...prev[currentChatId], errorMessage]\r\n    }));\r\n  }\r\n  setIsSending(false);\r\n};\r\n\r\n\r\n\r\nconst handleViewPDFClick = async (pdfPath, pageNumber = 1) => {\r\n  if (!pdfPath) return;\r\n\r\n  const token = localStorage.getItem('authToken');\r\n  \r\n  try {\r\n    const response = await axios.get(\r\n      `${config.API_BASE_URL}/get_highlighted_pdf?file_path=${encodeURIComponent(pdfPath)}`,\r\n      {\r\n        responseType: 'blob',\r\n        headers: {'Authorization': `Bearer ${token}`}\r\n      }\r\n    );\r\n    \r\n    const blob = new Blob([response.data], { type: 'application/pdf' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    \r\n    // Open the PDF in a new tab with the specific page number\r\n    window.open(`${url}#page=${pageNumber}`, \"_blank\");\r\n    \r\n    // Clean up the URL object after opening\r\n    setTimeout(() => {\r\n      window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      alert(\"The highlighted PDF has expired. Please make the query again to generate a new highlight.\");\r\n    } else {\r\n      console.error(\"Error fetching PDF:\", error);\r\n      alert(\"Error loading the PDF. Please try again.\");\r\n    }\r\n  }\r\n};\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // Scroll to the most recent message\r\n  useEffect(() => {\r\n    if (chatHistoryRef.current) {\r\n      chatHistoryRef.current.scrollTop = chatHistoryRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    setMessages(chats[chatID] || []);\r\n  }, [chatID, chats]);\r\n\r\n  const getWelcomeMessage = () => {\r\n    return selectedLanguage === \"eng\" \r\n      ? \"Hello! Let me know what you're curious about, and I'll find the relevant documents for you. How can I help you?\"\r\n      : \"Merhaba! Merak ettiğiniz konuları bana söyleyin, sizin için ilgili dokümanları bulayım. Size nasıl yardımcı olabilirim?\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-interaction-container\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n          <div className=\"select-container\">\r\n{/*             \r\n            <select\r\n              className=\"model-select\"\r\n              value={selectedModel}\r\n              onChange={(e) => setSelectedModel(e.target.value)}\r\n            >\r\n              {models.map((model) => (\r\n                <option key={model} value={model}>\r\n                  {model}\r\n                </option>\r\n              ))}\r\n            </select> */}\r\n\r\n            {/* <select\r\n              className=\"language-select\"\r\n              value={selectedLanguage}\r\n              onChange={(e) => setSelectedLanguage(e.target.value)}\r\n            >\r\n              {languages.map((lang) => (\r\n                <option key={lang} value={lang}>\r\n                  {lang === \"eng\" ? \"English\" : \"Türkçe\"}\r\n                </option>\r\n              ))}\r\n            </select> */}\r\n          </div>\r\n          {/*\r\n          <div>\r\n            You are speaking with ✨ {selectedModel} ✨\r\n          </div> */}\r\n        </div>\r\n        <div className=\"chat-history\" ref={chatHistoryRef}>\r\n          {messages.length === 0 ? (\r\n            <div className=\"message bot\">\r\n              <ReactMarkdown>{getWelcomeMessage()}</ReactMarkdown> \r\n            </div>\r\n          ) : (\r\n            messages.map((msg) => (\r\n              <div key={msg.id} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\r\n                <ReactMarkdown>{msg.text}</ReactMarkdown>\r\n                {msg.isBot && msg.sources && msg.sources.length > 0 && (\r\n                  msg.sources\r\n                  .filter(source => source?.filename && source.filename !== \"No filename\") // Ensure filename is valid\r\n                  .map((source, index) => (\r\n                    <button\r\n                      key={index}\r\n                      className=\"display-button\"\r\n                      onClick={() => handleViewPDFClick(source.highlighted_pdf_path, source.pages[0])}\r\n                    >\r\n                      <div className=\"pdfLabel\">{source.filename}</div>\r\n                    </button>\r\n                  ))\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <textarea\r\n            className=\"text-input\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder={selectedLanguage === \"eng\" ? \"Type your message...\" : \"Mesajınızı yazın...\"}\r\n            disabled={isSending}\r\n          />\r\n          <button className=\"send-button\" onClick={handleSendMessage} disabled={isSending}>\r\n            {isSending \r\n              ? (selectedLanguage === \"eng\" ? \"Waiting...\" : \"Bekleyin...\") \r\n              : (selectedLanguage === \"eng\" ? \"Send\" : \"Gönder\")}\r\n          </button>\r\n        </div>\r\n        <div className=\"feedback-link\">\r\n          <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSedQob3XPLOoiyA3sLy7jsVG0L3twcE_upSVL7ezV7NSuSVYQ/viewform?usp=header\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {selectedLanguage === \"eng\" ? \"Give us feedback!\" : \"Geribildirim verin!\"}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatbotUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}