{"ast":null,"code":"/**\r\n * @import {Code} from 'micromark-util-types'\r\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\r\n * Classify whether a code represents whitespace, punctuation, or something\r\n * else.\r\n *\r\n * Used for attention (emphasis, strong), whose sequences can open or close\r\n * based on the class of surrounding characters.\r\n *\r\n * > ðŸ‘‰ **Note**: eof (`null`) is seen as whitespace.\r\n *\r\n * @param {Code} code\r\n *   Code.\r\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\r\n *   Group.\r\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","map":{"version":3,"names":["markdownLineEndingOrSpace","unicodePunctuation","unicodeWhitespace","classifyCharacter","code"],"sources":["C:/Users/LENOVO/OneDrive/MasaÃ¼stÃ¼/Bitirme/bitirme/frontend/doc-manager-ui/node_modules/micromark-util-classify-character/index.js"],"sourcesContent":["/**\r\n * @import {Code} from 'micromark-util-types'\r\n */\r\n\r\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\r\n/**\r\n * Classify whether a code represents whitespace, punctuation, or something\r\n * else.\r\n *\r\n * Used for attention (emphasis, strong), whose sequences can open or close\r\n * based on the class of surrounding characters.\r\n *\r\n * > ðŸ‘‰ **Note**: eof (`null`) is seen as whitespace.\r\n *\r\n * @param {Code} code\r\n *   Code.\r\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\r\n *   Group.\r\n */\r\nexport function classifyCharacter(code) {\r\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\r\n    return 1;\r\n  }\r\n  if (unicodePunctuation(code)) {\r\n    return 2;\r\n  }\r\n}"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,yBAAyB,EAAEC,kBAAkB,EAAEC,iBAAiB,QAAQ,0BAA0B;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EACtC,IAAIA,IAAI,KAAK,IAAI,IAAIJ,yBAAyB,CAACI,IAAI,CAAC,IAAIF,iBAAiB,CAACE,IAAI,CAAC,EAAE;IAC/E,OAAO,CAAC;EACV;EACA,IAAIH,kBAAkB,CAACG,IAAI,CAAC,EAAE;IAC5B,OAAO,CAAC;EACV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}