{"ast":null,"code":"var _jsxFileName = \"/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport './chatbot.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = ({\n  chatID\n}) => {\n  _s();\n  /*const [messages, setMessages] = useState([\n    { id: 1, text: 'Hello! How can I assist you today?', isBot: true },\n  ]); */\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState(chatID);\n  const chatHistoryRef = useRef(null); // Create a reference for the chat container\n\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      isBot: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/user_query\", {\n        query: input\n      });\n      const data = response.data;\n      // console.log(response.data)\n      // const data =  `  \n      // ${response.data}\n      // `;\n\n      const botResponse = typeof data.response === 'string' ? data.response : JSON.stringify(data.response);\n      const filePath = data.file_path || null;\n\n      // Ensure file path is handled separately\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: botResponse,\n        // Only response, no file path in text\n        isBot: true,\n        filePath: filePath // Store filePath separately for the \"View PDF\" button\n      }]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: \"Sorry, there was an issue processing your request.\",\n        isBot: true\n      }]);\n    }\n    setInput(\"\");\n  };\n  const handleViewPDFClick = async filePath => {\n    if (!filePath) return;\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/get_pdf?file_path=${encodeURIComponent(filePath)}`, {\n        responseType: 'blob'\n      });\n      const blob = new Blob([response.data], {\n        type: 'application/pdf'\n      });\n      const url = window.URL.createObjectURL(blob);\n\n      // Open the PDF in a new tab\n      window.open(url, \"_blank\");\n    } catch (error) {\n      console.error(\"Error fetching PDF:\", error);\n    }\n  };\n\n  // Scroll to the most recent message\n  /*\n  useEffect(() => {\n    if (chatHistoryRef.current) {\n      chatHistoryRef.current.scrollTop = chatHistoryRef.current.scrollHeight;\n    }\n  }, [messages]); // Triggered whenever messages are updated\n  */\n  useEffect(() => {\n    setMessages(chats[chatID]);\n  }, [chatID, chats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interaction-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isBot ? 'bot' : 'user'}`,\n          children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 14\n          }, this), msg.isBot && msg.filePath && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"display-button\",\n            onClick: () => handleViewPDFClick(msg.filePath),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pdfLabel\",\n              children: \"View PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"text-input\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-link\",\n        children: \"Give us feedback!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"uY44d6mDGv8U1prFLl7iujpFAKo=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactMarkdown","axios","jsxDEV","_jsxDEV","ChatbotUI","chatID","_s","input","setInput","messages","setMessages","chatHistoryRef","handleSendMessage","trim","userMessage","id","Date","now","text","isBot","prev","response","post","query","data","botResponse","JSON","stringify","filePath","file_path","error","console","handleViewPDFClick","get","encodeURIComponent","responseType","blob","Blob","type","url","window","URL","createObjectURL","open","chats","className","children","map","msg","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport './chatbot.css';\nimport axios from 'axios';\n\nconst ChatbotUI = ({ chatID}) => {\n  /*const [messages, setMessages] = useState([\n    { id: 1, text: 'Hello! How can I assist you today?', isBot: true },\n  ]); */\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState(chatID);\n\n  const chatHistoryRef = useRef(null); // Create a reference for the chat container\n\n\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    \n    const userMessage = { id: Date.now(), text: input, isBot: false };\n    setMessages((prev) => [...prev, userMessage]);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/user_query\", {\n        query: input\n      });\n\n      const data = response.data;\n      // console.log(response.data)\n      // const data =  `  \n      // ${response.data}\n      // `;\n\n      const botResponse = typeof data.response === 'string' ? data.response : JSON.stringify(data.response);\n      const filePath = data.file_path || null;\n\n      // Ensure file path is handled separately\n      setMessages((prev) => [\n        ...prev,\n        {\n          id: Date.now() + 1,\n          text: botResponse,  // Only response, no file path in text\n          isBot: true,\n          filePath: filePath, // Store filePath separately for the \"View PDF\" button\n        },\n      ]);\n\n\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages((prev) => [\n        ...prev,\n        { id: Date.now() + 1, text: \"Sorry, there was an issue processing your request.\", isBot: true },\n      ]);\n    }\n\n    setInput(\"\");\n  };\n\n  const handleViewPDFClick = async (filePath) => {\n    if (!filePath) return;\n\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/get_pdf?file_path=${encodeURIComponent(filePath)}`, {\n        responseType: 'blob',\n      });\n\n      const blob = new Blob([response.data], { type: 'application/pdf' });\n      const url = window.URL.createObjectURL(blob);\n\n      // Open the PDF in a new tab\n      window.open(url, \"_blank\");\n    } catch (error) {\n      console.error(\"Error fetching PDF:\", error);\n    }\n  };\n\n\n\n  // Scroll to the most recent message\n  /*\n  useEffect(() => {\n    if (chatHistoryRef.current) {\n      chatHistoryRef.current.scrollTop = chatHistoryRef.current.scrollHeight;\n    }\n  }, [messages]); // Triggered whenever messages are updated\n*/\nuseEffect(() => {\n    setMessages(chats[chatID]);\n  }, [chatID, chats]);\n    \n\n  return (\n    <div className=\"chat-interaction-container\">\n\n      <div className=\"chat-container\">\n        {/*<div className=\"chat-header\"><h2>SUDoc</h2></div> */}\n\n        <div className=\"chat-history\">\n          {messages.map((msg) => (\n            <div key={msg.id} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\n             <ReactMarkdown>{msg.text}</ReactMarkdown> \n\n              {/* Show the button below the chatbot message only if filePath exists */}\n              {msg.isBot && msg.filePath && (\n                <button className=\"display-button\" onClick={() => handleViewPDFClick(msg.filePath)}>\n                  <div className= \"pdfLabel\">View PDF</div >\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"input-container\">\n\n          <textarea\n            \n            type=\"text\"\n            className=\"text-input\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button className=\"send-button\" onClick={handleSendMessage}>\n            Send\n          </button>\n\n    \n        </div>\n        <div className=\"feedback-link\">Give us feedback!</div>\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}