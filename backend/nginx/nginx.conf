# /etc/nginx/nginx.conf

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;  # Add MIME types support
    default_type application/octet-stream;

    # Detailed logging
    log_format detailed_log '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'Request_time=$request_time '
                          'Upstream_addr=$upstream_addr '
                          'Upstream_response_time=$upstream_response_time';

    # Add error logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log detailed_log;

    # General settings
    server {
        listen 80 default_server;
        server_name _;  # Accept any hostname

        # Enable gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Serve React app from the mounted volume
        location / {
            root /usr/share/nginx/html;  # This is where the frontend build files should be mounted
            index index.html;
            try_files $uri $uri/ /index.html;  # Support React router
            
            # Add proper headers for static content
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            expires 0;
        }

        # Proxy API calls to Flask
       location /api/ {
            proxy_pass http://backend:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Increase timeout settings
            proxy_connect_timeout 660s;
            proxy_send_timeout 660s;
            proxy_read_timeout 660s;
            send_timeout 660s;

            # Prevent buffering large responses
            proxy_buffering off;
            proxy_request_buffering off;

            client_max_body_size 100M;
            # Fix CORS issues
            #add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Origin' 'http://localhost:5002' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Cache-Control';
            add_header 'Access-Control-Allow-Credentials' 'true';

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Error pages
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Serve static files with proper mime types
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            root /usr/share/nginx/html;
            expires max;
            add_header Cache-Control public;
        }
    }
}
