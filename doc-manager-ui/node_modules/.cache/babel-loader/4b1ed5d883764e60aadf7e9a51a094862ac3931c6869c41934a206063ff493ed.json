{"ast":null,"code":"var _jsxFileName = \"/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hello! How can I assist you today?\",\n    isBot: true\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isDimVisible, setIsDimVisible] = useState(false); // State for dim overlay visibility\n  const [isPdfVisible, setIsPdfVisible] = useState(false); // State for PDF visibility\n  const [isRetrieving, setIsRetrieving] = useState(false); // State for showing loading indicator\n\n  const handleSendMessage = async () => {\n    if (input.trim() === '') return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      isBot: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsRetrieving(true); // Show \"retrieving\"\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/user_query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n\n      // Stream response from backend\n      // suan yapamıyo :(\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let botMessage = '';\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: 'Retrieving...',\n        isBot: true\n      }]);\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) break;\n        botMessage += decoder.decode(value, {\n          stream: true\n        });\n        setMessages(prev => {\n          const updatedMessages = [...prev];\n          updatedMessages[updatedMessages.length - 1].text = botMessage; // Update the last message\n          return updatedMessages;\n        });\n      }\n      setIsRetrieving(false); // Hide \"retrieving\"\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: 'Sorry, an error occurred.',\n        isBot: true\n      }]);\n      setIsRetrieving(false);\n    }\n  };\n  const handleViewPDFClick = () => {\n    setIsDimVisible(true); // Show dim overlay when the button is clicked\n    setIsPdfVisible(true); // Show PDF viewer\n  };\n  const handleBackArrowClick = () => {\n    setIsDimVisible(false); // Hide dim overlay when back arrow is clicked\n    setIsPdfVisible(false); // Hide PDF viewer\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [isDimVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dim\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-arrow-button\",\n        onClick: handleBackArrowClick,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), isPdfVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-container\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"/pdfs/aaa.pdf\" // Assuming the PDF is in the public folder\n        ,\n        title: \"PDF Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"SUDoc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isBot ? \"bot\" : \"user\"}`,\n          children: [msg.text, msg.isBot && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"display-button\",\n            onClick: handleViewPDFClick,\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)), isRetrieving && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: \"Retrieving...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"text-input\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"1inv83972StuSRq27BL11JbuOss=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatbotUI","_s","messages","setMessages","id","text","isBot","input","setInput","isDimVisible","setIsDimVisible","isPdfVisible","setIsPdfVisible","isRetrieving","setIsRetrieving","handleSendMessage","trim","userMessage","Date","now","prev","response","fetch","method","headers","body","JSON","stringify","query","reader","getReader","decoder","TextDecoder","botMessage","value","done","read","decode","stream","updatedMessages","length","error","console","handleViewPDFClick","handleBackArrowClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","title","map","msg","type","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./chatbot.css\";\n\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([\n    { id: 1, text: \"Hello! How can I assist you today?\", isBot: true },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [isDimVisible, setIsDimVisible] = useState(false); // State for dim overlay visibility\n  const [isPdfVisible, setIsPdfVisible] = useState(false); // State for PDF visibility\n  const [isRetrieving, setIsRetrieving] = useState(false); // State for showing loading indicator\n\n  const handleSendMessage = async () => {\n    if (input.trim() === '') return;\n\n    const userMessage = { id: Date.now(), text: input, isBot: false };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n    setIsRetrieving(true); // Show \"retrieving\"\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/user_query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query: input }),\n      });\n\n      // Stream response from backend\n      // suan yapamıyo :(\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let botMessage = '';\n      setMessages((prev) => [\n        ...prev,\n        { id: Date.now() + 1, text: 'Retrieving...', isBot: true },\n      ]);\n\n      while (true) {\n        const { value, done } = await reader.read();\n        if (done) break;\n        botMessage += decoder.decode(value, { stream: true });\n        setMessages((prev) => {\n          const updatedMessages = [...prev];\n          updatedMessages[updatedMessages.length - 1].text = botMessage; // Update the last message\n          return updatedMessages;\n        });\n      }\n\n      setIsRetrieving(false); // Hide \"retrieving\"\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages((prev) => [\n        ...prev,\n        { id: Date.now() + 1, text: 'Sorry, an error occurred.', isBot: true },\n      ]);\n      setIsRetrieving(false);\n    }\n  };\n  \n\n  const handleViewPDFClick = () => {\n    setIsDimVisible(true); // Show dim overlay when the button is clicked\n    setIsPdfVisible(true); // Show PDF viewer\n  };\n\n  const handleBackArrowClick = () => {\n    setIsDimVisible(false); // Hide dim overlay when back arrow is clicked\n    setIsPdfVisible(false); // Hide PDF viewer\n  };\n\n  return (\n    <div className=\"app-container\">\n      {isDimVisible && (\n        <div className=\"dim\">\n          {/* Back arrow button to restore lights */}\n          <button className=\"back-arrow-button\" onClick={handleBackArrowClick}>\n            ←\n          </button>\n        </div>\n      )}\n\n      {/* PDF Viewer */}\n      {isPdfVisible && (\n        <div className=\"pdf-container\">\n          {/* Using iframe to display the PDF */}\n          <iframe\n            src=\"/pdfs/aaa.pdf\" // Assuming the PDF is in the public folder\n            title=\"PDF Viewer\"\n          ></iframe>\n        </div>\n      )}\n\n      <div className=\"chat-container\">\n        <div className=\"chat-header\">SUDoc</div>\n\n        <div className=\"chat-history\">\n          {messages.map((msg) => (\n            <div\n              key={msg.id}\n              className={`message ${msg.isBot ? \"bot\" : \"user\"}`}\n            >\n              {msg.text}\n\n              {/* Show the button below the chatbot message only */}\n              {msg.isBot && (\n                <button className=\"display-button\" onClick={handleViewPDFClick}>\n                  View PDF\n                </button>\n              )}\n            </div>\n          ))}\n          {isRetrieving && <div className=\"message bot\">Retrieving...</div>}\n        </div>\n\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            className=\"text-input\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button className=\"send-button\" onClick={handleSendMessage}>\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}