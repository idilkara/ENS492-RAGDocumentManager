{"ast":null,"code":"var _jsxFileName = \"/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './chatbot.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: 'Hello! How can I assist you today?',\n    isBot: true\n  }]);\n  const [input, setInput] = useState('');\n  const [isDimVisible, setIsDimVisible] = useState(false); // State for dim overlay visibility\n  const [isPdfVisible, setIsPdfVisible] = useState(false); // State for PDF visibility\n\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      isBot: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/user_query\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n      const data = await response.json();\n      const botResponse = data.response || \"I'm here to assist you!\";\n      const filePath = data.file_path || null;\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: botResponse,\n        isBot: true,\n        filePath: filePath // Add filePath to the message\n      }]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: \"Sorry, there was an issue processing your request.\",\n        isBot: true\n      }]);\n    }\n    setInput(\"\");\n  };\n  const handleViewPDFClick = async filePath => {\n    if (!filePath) return;\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/get_pdf?file_path=${encodeURIComponent(filePath)}`, {\n        method: \"GET\"\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch the PDF file\");\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n\n      // Open the PDF in a new tab\n      window.open(url, \"_blank\");\n    } catch (error) {\n      console.error(\"Error fetching PDF:\", error);\n    }\n  };\n  const handleBackArrowClick = () => {\n    setIsDimVisible(false); // Hide dim overlay when back arrow is clicked\n    setIsPdfVisible(false); // Hide PDF viewer\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [isDimVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dim\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-arrow-button\",\n        onClick: handleBackArrowClick,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), isPdfVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-container\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"/pdfs/aaa.pdf\" // Assuming the PDF is in the public folder\n        ,\n        title: \"PDF Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"SUDoc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isBot ? 'bot' : 'user'}`,\n          children: [msg.text, msg.isBot && msg.filePath && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"display-button\",\n            onClick: () => handleViewPDFClick(msg.filePath),\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"text-input\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"OeD8qMgwnK+YletH9uADMAo3UOE=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatbotUI","_s","messages","setMessages","id","text","isBot","input","setInput","isDimVisible","setIsDimVisible","isPdfVisible","setIsPdfVisible","handleSendMessage","trim","userMessage","Date","now","prev","response","fetch","method","headers","body","JSON","stringify","query","data","json","botResponse","filePath","file_path","error","console","handleViewPDFClick","encodeURIComponent","ok","Error","blob","url","window","URL","createObjectURL","open","handleBackArrowClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","title","map","msg","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './chatbot.css';\nimport axios from 'axios';\n\nconst ChatbotUI = () => {\n  const [messages, setMessages] = useState([\n    { id: 1, text: 'Hello! How can I assist you today?', isBot: true },\n  ]);\n  const [input, setInput] = useState('');\n  const [isDimVisible, setIsDimVisible] = useState(false);  // State for dim overlay visibility\n  const [isPdfVisible, setIsPdfVisible] = useState(false);  // State for PDF visibility\n\n  const handleSendMessage = async () => {\n    if (input.trim() === \"\") return;\n  \n    const userMessage = { id: Date.now(), text: input, isBot: false };\n    setMessages((prev) => [...prev, userMessage]);\n  \n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/user_query\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ query: input }),\n      });\n  \n      const data = await response.json();\n  \n      const botResponse = data.response || \"I'm here to assist you!\";\n      const filePath = data.file_path || null;\n  \n      setMessages((prev) => [\n        ...prev,\n        {\n          id: Date.now() + 1,\n          text: botResponse,\n          isBot: true,\n          filePath: filePath, // Add filePath to the message\n        },\n      ]);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n      setMessages((prev) => [\n        ...prev,\n        { id: Date.now() + 1, text: \"Sorry, there was an issue processing your request.\", isBot: true },\n      ]);\n    }\n  \n    setInput(\"\");\n  };\n\n  const handleViewPDFClick = async (filePath) => {\n    if (!filePath) return;\n\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/get_pdf?file_path=${encodeURIComponent(filePath)}`, {\n        method: \"GET\",\n      });\n\n      if (!response.ok) throw new Error(\"Failed to fetch the PDF file\");\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n  \n      // Open the PDF in a new tab\n      window.open(url, \"_blank\");\n    } catch (error) {\n      console.error(\"Error fetching PDF:\", error);\n    }\n  };\n\n  const handleBackArrowClick = () => {\n    setIsDimVisible(false);  // Hide dim overlay when back arrow is clicked\n    setIsPdfVisible(false);  // Hide PDF viewer\n  };\n\n  return (\n    <div className=\"app-container\">\n      {isDimVisible && (\n        <div className=\"dim\">\n          {/* Back arrow button to restore lights */}\n          <button className=\"back-arrow-button\" onClick={handleBackArrowClick}>\n            ‚Üê\n          </button>\n        </div>\n      )}\n\n      {/* PDF Viewer */}\n      {isPdfVisible && (\n        <div className=\"pdf-container\">\n          {/* Using iframe to display the PDF */}\n          <iframe\n            src=\"/pdfs/aaa.pdf\"  // Assuming the PDF is in the public folder\n            title=\"PDF Viewer\"\n          ></iframe>\n        </div>\n      )}\n\n      <div className=\"chat-container\">\n        <div className=\"chat-header\">SUDoc</div>\n\n        <div className=\"chat-history\">\n          {messages.map((msg) => (\n            <div key={msg.id} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\n              {msg.text}\n\n              {/* Show the button below the chatbot message only */}\n              {msg.isBot && msg.filePath && (\n                <button className=\"display-button\" onClick={() => handleViewPDFClick(msg.filePath)}>\n                  View PDF\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            className=\"text-input\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button className=\"send-button\" onClick={handleSendMessage}>\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatbotUI;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CACvC;IAAEQ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,oCAAoC;IAAEC,KAAK,EAAE;EAAK,CAAC,CACnE,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EAC1D,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAE1D,MAAMiB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIN,KAAK,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAEzB,MAAMC,WAAW,GAAG;MAAEX,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEZ,IAAI,EAAEE,KAAK;MAAED,KAAK,EAAE;IAAM,CAAC;IACjEH,WAAW,CAAEe,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,WAAW,CAAC,CAAC;IAE7C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEnB;QAAM,CAAC;MACvC,CAAC,CAAC;MAEF,MAAMoB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,MAAMC,WAAW,GAAGF,IAAI,CAACR,QAAQ,IAAI,yBAAyB;MAC9D,MAAMW,QAAQ,GAAGH,IAAI,CAACI,SAAS,IAAI,IAAI;MAEvC5B,WAAW,CAAEe,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QACEd,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC;QAClBZ,IAAI,EAAEwB,WAAW;QACjBvB,KAAK,EAAE,IAAI;QACXwB,QAAQ,EAAEA,QAAQ,CAAE;MACtB,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C7B,WAAW,CAAEe,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QAAEd,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC;QAAEZ,IAAI,EAAE,oDAAoD;QAAEC,KAAK,EAAE;MAAK,CAAC,CAChG,CAAC;IACJ;IAEAE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAM0B,kBAAkB,GAAG,MAAOJ,QAAQ,IAAK;IAC7C,IAAI,CAACA,QAAQ,EAAE;IAEf,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2Ce,kBAAkB,CAACL,QAAQ,CAAC,EAAE,EAAE;QACtGT,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACiB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MAEjE,MAAMC,IAAI,GAAG,MAAMnB,QAAQ,CAACmB,IAAI,CAAC,CAAC;MAClC,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;;MAE5C;MACAE,MAAM,CAACG,IAAI,CAACJ,GAAG,EAAE,QAAQ,CAAC;IAC5B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IACjClC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAE;IACzBE,eAAe,CAAC,KAAK,CAAC,CAAC,CAAE;EAC3B,CAAC;EAED,oBACEb,OAAA;IAAK8C,SAAS,EAAC,eAAe;IAAAC,QAAA,GAC3BrC,YAAY,iBACXV,OAAA;MAAK8C,SAAS,EAAC,KAAK;MAAAC,QAAA,eAElB/C,OAAA;QAAQ8C,SAAS,EAAC,mBAAmB;QAACE,OAAO,EAAEH,oBAAqB;QAAAE,QAAA,EAAC;MAErE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAGAxC,YAAY,iBACXZ,OAAA;MAAK8C,SAAS,EAAC,eAAe;MAAAC,QAAA,eAE5B/C,OAAA;QACEqD,GAAG,EAAC,eAAe,CAAE;QAAA;QACrBC,KAAK,EAAC;MAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACN,eAEDpD,OAAA;MAAK8C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B/C,OAAA;QAAK8C,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAExCpD,OAAA;QAAK8C,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1B5C,QAAQ,CAACoD,GAAG,CAAEC,GAAG,iBAChBxD,OAAA;UAAkB8C,SAAS,EAAE,WAAWU,GAAG,CAACjD,KAAK,GAAG,KAAK,GAAG,MAAM,EAAG;UAAAwC,QAAA,GAClES,GAAG,CAAClD,IAAI,EAGRkD,GAAG,CAACjD,KAAK,IAAIiD,GAAG,CAACzB,QAAQ,iBACxB/B,OAAA;YAAQ8C,SAAS,EAAC,gBAAgB;YAACE,OAAO,EAAEA,CAAA,KAAMb,kBAAkB,CAACqB,GAAG,CAACzB,QAAQ,CAAE;YAAAgB,QAAA,EAAC;UAEpF;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA,GAROI,GAAG,CAACnD,EAAE;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASX,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENpD,OAAA;QAAK8C,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B/C,OAAA;UACEyD,IAAI,EAAC,MAAM;UACXX,SAAS,EAAC,YAAY;UACtBY,KAAK,EAAElD,KAAM;UACbmD,QAAQ,EAAGC,CAAC,IAAKnD,QAAQ,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,WAAW,EAAC;QAAsB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACFpD,OAAA;UAAQ8C,SAAS,EAAC,aAAa;UAACE,OAAO,EAAElC,iBAAkB;UAAAiC,QAAA,EAAC;QAE5D;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClD,EAAA,CAhIID,SAAS;AAAA8D,EAAA,GAAT9D,SAAS;AAkIf,eAAeA,SAAS;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}