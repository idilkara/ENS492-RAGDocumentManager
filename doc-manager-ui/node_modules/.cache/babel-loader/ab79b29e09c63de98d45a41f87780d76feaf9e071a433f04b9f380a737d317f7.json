{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\bitirme\\\\frontend\\\\doc-manager-ui\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\nimport config from \"../config\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const handleLogin = async () => {\n    setError('');\n    try {\n      const response = await fetch(`${config.API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('authToken', data.token);\n        localStorage.setItem('userRole', data.role);\n        localStorage.setItem(\"userId\", data.user_id);\n        navigate('/main');\n      } else {\n        setError(data.message || 'Login failed, please try again.');\n      }\n    } catch (error) {\n      setError('An error occurred when trying to log in. Please try again later.');\n      console.error('Login error: ', error);\n    }\n  };\n  const handleRegister = async () => {\n    setError('');\n\n    // Basic validation\n    if (!email || !password) {\n      setError('Please enter both email and password.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    try {\n      const response = await fetch(`${config.API_BASE_URL}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Switch back to login view on successful registration\n        setIsRegistering(false);\n        setEmail('');\n        setPassword('');\n        setConfirmPassword('');\n        // You could also add a success message here\n        alert('Registration successful! Please login with your new credentials.');\n      } else {\n        setError(data.message || 'Registration failed, please try again.');\n      }\n    } catch (error) {\n      setError('An error occurred during registration. Please try again later.');\n      console.error('Registration error: ', error);\n    }\n  };\n  const toggleRegisterView = () => {\n    setIsRegistering(!isRegistering);\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-mini-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Sabanc\\u0131 University Document Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), !isRegistering ?\n      /*#__PURE__*/\n      // Login View\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: toggleRegisterView,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // Register View\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Create password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: handleRegister,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: toggleRegisterView,\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"TiOh6SX3VbVoxwFVfrqLnEFz/5A=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","config","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","isRegistering","setIsRegistering","handleLogin","response","fetch","API_BASE_URL","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","role","user_id","message","console","handleRegister","alert","toggleRegisterView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Masaüstü/bitirme/frontend/doc-manager-ui/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport config from \"../config\";\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isRegistering, setIsRegistering] = useState(false);\r\n\r\n    const handleLogin = async () => {\r\n        setError('');\r\n\r\n        try {\r\n            const response = await fetch(`${config.API_BASE_URL}/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({email, password})\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if(response.ok) {\r\n                localStorage.setItem('authToken', data.token);\r\n                localStorage.setItem('userRole', data.role);\r\n                localStorage.setItem(\"userId\", data.user_id);\r\n                navigate('/main');\r\n            } else {\r\n                setError(data.message || 'Login failed, please try again.');\r\n            }\r\n        }\r\n        catch(error) {\r\n            setError('An error occurred when trying to log in. Please try again later.');\r\n            console.error('Login error: ', error);\r\n        }\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        setError('');\r\n        \r\n        // Basic validation\r\n        if (!email || !password) {\r\n            setError('Please enter both email and password.');\r\n            return;\r\n        }\r\n        \r\n        if (password !== confirmPassword) {\r\n            setError('Passwords do not match.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${config.API_BASE_URL}/register`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({email, password})\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if(response.ok) {\r\n                // Switch back to login view on successful registration\r\n                setIsRegistering(false);\r\n                setEmail('');\r\n                setPassword('');\r\n                setConfirmPassword('');\r\n                // You could also add a success message here\r\n                alert('Registration successful! Please login with your new credentials.');\r\n            } else {\r\n                setError(data.message || 'Registration failed, please try again.');\r\n            }\r\n        }\r\n        catch(error) {\r\n            setError('An error occurred during registration. Please try again later.');\r\n            console.error('Registration error: ', error);\r\n        }\r\n    };\r\n\r\n    const toggleRegisterView = () => {\r\n        setIsRegistering(!isRegistering);\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setError('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-mini-container\">\r\n                <h1>Welcome to Sabancı University Document Manager</h1>\r\n                \r\n                {!isRegistering ? (\r\n                    // Login View\r\n                    <>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Enter your email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            className=\"login-input\"\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            className=\"login-input\"\r\n                        />\r\n                        <button className=\"login-button\" onClick={handleLogin}>Login</button>\r\n                        <button className=\"login-button\" onClick={toggleRegisterView}>Register</button>\r\n                    </>\r\n                ) : (\r\n                    // Register View\r\n                    <>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Enter your email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            className=\"login-input\"\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Create password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            className=\"login-input\"\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm password\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            className=\"login-input\"\r\n                        />\r\n                        <button className=\"login-button\" onClick={handleRegister}>Create Account</button>\r\n                        <button className=\"login-button\" onClick={toggleRegisterView}>Back to Login</button>\r\n                    </>\r\n                )}\r\n                \r\n                {error && <div className=\"login-error\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}