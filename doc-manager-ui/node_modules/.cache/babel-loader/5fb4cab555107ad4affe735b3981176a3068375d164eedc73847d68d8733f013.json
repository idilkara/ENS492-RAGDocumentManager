{"ast":null,"code":"var _jsxFileName = \"/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatbotUI from './chatbot';\nimport SidePanel from './sidepanel';\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [chatID, setChatID] = useState(\"NONE\"); // Shared state for selected chat\n  const [sessions, setSessions] = useState([]);\n  const [chats, setChats] = useState({}); // State to store chats\n\n  const fetchUserSessions = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/get_user_sessions?user_id=1');\n      const data = await response.json();\n      if (response.ok) {\n        setSessions(data); // Set the sessions data for rendering in SidePanel\n        setChats(data); // Update chats state with fetched data\n      } else {\n        console.error('Error fetching sessions:', data.error);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchUserSessions();\n  }, []); // Fetch user sessions on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: /*#__PURE__*/_jsxDEV(SidePanel, {\n        chatID: chatID,\n        setChatID: setChatID,\n        sessions: sessions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: /*#__PURE__*/_jsxDEV(ChatbotUI, {\n        chatID: chatID,\n        chats: chats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"YGSruWkWJmPtsNxfQMxvEs5bwGs=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","ChatbotUI","SidePanel","jsxDEV","_jsxDEV","Main","_s","chatID","setChatID","sessions","setSessions","chats","setChats","fetchUserSessions","response","fetch","data","json","ok","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/idily/Desktop/ens-frontend/sudoc-docs/doc-manager-ui/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatbotUI from './chatbot';\nimport SidePanel from './sidepanel';\nimport './Main.css';\n\nconst Main = () => {\n  const [chatID, setChatID] = useState(\"NONE\"); // Shared state for selected chat\n  const [sessions, setSessions] = useState([]);\n  const [chats, setChats] = useState({}); // State to store chats\n\n  const fetchUserSessions = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/get_user_sessions?user_id=1');\n      const data = await response.json();\n      if (response.ok) {\n        setSessions(data);  // Set the sessions data for rendering in SidePanel\n        setChats(data); // Update chats state with fetched data\n      } else {\n        console.error('Error fetching sessions:', data.error);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserSessions();\n  }, []); // Fetch user sessions on mount\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"left-panel\">\n        <SidePanel chatID={chatID} setChatID={setChatID} sessions={sessions} />\n      </div>\n      <div className=\"right-panel\">\n        <ChatbotUI chatID={chatID} chats={chats} />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExC,MAAMc,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,CAAC;MACjF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfR,WAAW,CAACM,IAAI,CAAC,CAAC,CAAE;QACpBJ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEJ,IAAI,CAACI,KAAK,CAAC;MACvD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACda,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACET,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBlB,OAAA,CAACF,SAAS;QAACK,MAAM,EAAEA,MAAO;QAACC,SAAS,EAAEA,SAAU;QAACC,QAAQ,EAAEA;MAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACNtB,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BlB,OAAA,CAACH,SAAS;QAACM,MAAM,EAAEA,MAAO;QAACI,KAAK,EAAEA;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAlCID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}